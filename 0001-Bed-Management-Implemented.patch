From 1eb94cceb7243c0529691ac50ae0be09f88f68e4 Mon Sep 17 00:00:00 2001
From: mujir <mujir@hotmail.com>
Date: Wed, 25 Sep 2013 19:14:17 +0530
Subject: [PATCH] Bed Management: Implemented 1) Liquibase scripts to create
 the tables 2) AdmissionLocation resource implemented to
 retrieve list of Admission Locations ToDo: Admission
 Location not returning results.

---
 .../emrapi/bedmanagement/BedManagementDAO.java     |  9 +++
 .../emrapi/bedmanagement/BedManagementService.java | 10 +++
 .../bedmanagement/BedManagementServiceImpl.java    | 21 ++++++
 .../bedmanagement/HibernateBedManagementDAO.java   | 35 ++++++++++
 .../bedmanagement/domain/AdmissionLocation.java    | 62 +++++++++++++++++
 .../module/emrapi/bedmanagement/domain/Bed.java    |  7 ++
 .../bedmanagement/domain/BedLocationMapping.java   | 11 +++
 .../bedmanagement/domain/BedPatientAssignment.java | 13 ++++
 api/src/main/resources/Bed.hbm.xml                 | 18 +++++
 api/src/main/resources/BedLocationMapping.hbm.xml  | 22 ++++++
 .../main/resources/BedPatientAssignment.hbm.xml    | 22 ++++++
 api/src/main/resources/liquibase.xml               | 66 ++++++++++++++++++
 .../main/resources/moduleApplicationContext.xml    | 69 +++++++++++++++++--
 .../bedmanagement/BedManagementServiceTest.java    | 28 ++++++++
 .../db/BedManagementDaoComponentTest.java          | 48 +++++++++++++
 .../bedManagementDAOComponentTestDataset.xml       | 77 +++++++++++++++++++++
 api/src/test/resources/test-hibernate.cfg.xml      |  3 +
 .../web/controller/AdmissionLocationResource.java  | 80 ++++++++++++++++++++++
 omod/src/main/resources/config.xml                 |  2 +-
 19 files changed, 597 insertions(+), 6 deletions(-)
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementDAO.java
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementService.java
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceImpl.java
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/HibernateBedManagementDAO.java
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/AdmissionLocation.java
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/Bed.java
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedLocationMapping.java
 create mode 100644 api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedPatientAssignment.java
 create mode 100644 api/src/main/resources/Bed.hbm.xml
 create mode 100644 api/src/main/resources/BedLocationMapping.hbm.xml
 create mode 100644 api/src/main/resources/BedPatientAssignment.hbm.xml
 create mode 100644 api/src/main/resources/liquibase.xml
 create mode 100644 api/src/test/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceTest.java
 create mode 100644 api/src/test/java/org/openmrs/module/emrapi/bedmanagement/db/BedManagementDaoComponentTest.java
 create mode 100644 api/src/test/resources/bedManagementDAOComponentTestDataset.xml
 create mode 100644 omod/src/main/java/org/openmrs/module/emrapi/web/controller/AdmissionLocationResource.java

diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementDAO.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementDAO.java
new file mode 100644
index 0000000..597b260
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementDAO.java
@@ -0,0 +1,9 @@
+package org.openmrs.module.emrapi.bedmanagement;
+
+import org.openmrs.module.emrapi.bedmanagement.domain.AdmissionLocation;
+
+import java.util.List;
+
+public interface BedManagementDAO {
+    List<AdmissionLocation> getAllLocationsBy(String locationTagSupportsAdmission);
+}
diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementService.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementService.java
new file mode 100644
index 0000000..d63d2f6
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementService.java
@@ -0,0 +1,10 @@
+package org.openmrs.module.emrapi.bedmanagement;
+
+import org.openmrs.api.OpenmrsService;
+import org.openmrs.module.emrapi.bedmanagement.domain.AdmissionLocation;
+
+import java.util.List;
+
+public interface BedManagementService extends OpenmrsService {
+    List<AdmissionLocation> getAllAdmissionLocations();
+}
diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceImpl.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceImpl.java
new file mode 100644
index 0000000..7c48256
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceImpl.java
@@ -0,0 +1,21 @@
+package org.openmrs.module.emrapi.bedmanagement;
+
+import org.openmrs.api.impl.BaseOpenmrsService;
+import org.openmrs.module.emrapi.EmrApiConstants;
+import org.openmrs.module.emrapi.bedmanagement.domain.AdmissionLocation;
+
+import java.util.List;
+
+public class BedManagementServiceImpl extends BaseOpenmrsService implements BedManagementService {
+
+    BedManagementDAO bedManagementDao;
+
+    public void setBedManagementDao(BedManagementDAO bedManagementDao) {
+        this.bedManagementDao = bedManagementDao;
+    }
+
+    @Override
+    public List<AdmissionLocation> getAllAdmissionLocations() {
+        return bedManagementDao.getAllLocationsBy(EmrApiConstants.LOCATION_TAG_SUPPORTS_ADMISSION);
+    }
+}
diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/HibernateBedManagementDAO.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/HibernateBedManagementDAO.java
new file mode 100644
index 0000000..78f066f
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/HibernateBedManagementDAO.java
@@ -0,0 +1,35 @@
+package org.openmrs.module.emrapi.bedmanagement;
+
+import org.hibernate.Query;
+import org.hibernate.SessionFactory;
+import org.hibernate.transform.Transformers;
+import org.hibernate.type.StandardBasicTypes;
+import org.openmrs.module.emrapi.bedmanagement.domain.AdmissionLocation;
+
+import java.util.List;
+
+public class HibernateBedManagementDAO implements BedManagementDAO {
+    SessionFactory sessionFactory;
+
+    public void setSessionFactory(SessionFactory sessionFactory) {
+        this.sessionFactory = sessionFactory;
+    }
+
+    @Override
+    public List<AdmissionLocation> getAllLocationsBy(String locationTag) {
+        Query query = sessionFactory.getCurrentSession().createSQLQuery("select ward.name as name, ward.description as description, count(layout.bed_id) as totalBeds, count(assignment.bed_id) as occupiedBeds from location ward " +
+                "inner join location_tag_map tag_map on tag_map.location_id = ward.location_id " +
+                "inner join location_tag tag on tag.name='" + locationTag + "' and tag.location_tag_id=tag_map.location_tag_id " +
+                "left outer join location physicalSpace on physicalSpace.parent_location = ward.location_id " +
+                "left outer join bed_location_mapping layout on layout.location_id = physicalSpace.location_id and layout.bed_id is not null " +
+                "left outer join bed_patient_assignment assignment on assignment.bed_id = layout.bed_id " +
+                "where ward.parent_location is null group by ward.name, ward.description ")
+                .addScalar("name", StandardBasicTypes.STRING)
+                .addScalar("description", StandardBasicTypes.STRING)
+                .addScalar("totalBeds", StandardBasicTypes.INTEGER)
+                .addScalar("occupiedBeds", StandardBasicTypes.INTEGER)
+                .setResultTransformer(Transformers.aliasToBean(AdmissionLocation.class));
+
+        return query.list();
+    }
+}
diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/AdmissionLocation.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/AdmissionLocation.java
new file mode 100644
index 0000000..dcd0d48
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/AdmissionLocation.java
@@ -0,0 +1,62 @@
+package org.openmrs.module.emrapi.bedmanagement.domain;
+
+import org.openmrs.BaseOpenmrsData;
+
+public class AdmissionLocation extends BaseOpenmrsData implements java.io.Serializable {
+    private String name;
+    private String description;
+    private int totalBeds;
+    private int occupiedBeds;
+
+    public String getName() {
+        return name;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public int getTotalBeds() {
+        return totalBeds;
+    }
+
+    public int getOccupiedBeds() {
+        return occupiedBeds;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public void setTotalBeds(int totalBeds) {
+        this.totalBeds = totalBeds;
+    }
+
+    public void setOccupiedBeds(int occupiedBeds) {
+        this.occupiedBeds = occupiedBeds;
+    }
+
+    @Override
+    public String toString() {
+        return "AdmissionLocation{" +
+                "name='" + name + '\'' +
+                ", description='" + description + '\'' +
+                ", totalBeds=" + totalBeds +
+                ", occupiedBeds=" + occupiedBeds +
+                '}';
+    }
+
+    @Override
+    public Integer getId() {
+        return null;
+    }
+
+    @Override
+    public void setId(Integer integer) {
+
+    }
+}
diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/Bed.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/Bed.java
new file mode 100644
index 0000000..8e23fa4
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/Bed.java
@@ -0,0 +1,7 @@
+package org.openmrs.module.emrapi.bedmanagement.domain;
+
+public class Bed {
+    private int id;
+    private String number;
+
+}
diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedLocationMapping.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedLocationMapping.java
new file mode 100644
index 0000000..0d489c9
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedLocationMapping.java
@@ -0,0 +1,11 @@
+package org.openmrs.module.emrapi.bedmanagement.domain;
+
+import org.openmrs.Location;
+
+public class BedLocationMapping {
+    private int id;
+    private Location location;
+    private Bed bed;
+    private int row;
+    private int column;
+}
diff --git a/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedPatientAssignment.java b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedPatientAssignment.java
new file mode 100644
index 0000000..fd88b2b
--- /dev/null
+++ b/api/src/main/java/org/openmrs/module/emrapi/bedmanagement/domain/BedPatientAssignment.java
@@ -0,0 +1,13 @@
+package org.openmrs.module.emrapi.bedmanagement.domain;
+
+import org.openmrs.Patient;
+
+import java.util.Date;
+
+public class BedPatientAssignment {
+    private int id;
+    private Bed bed;
+    private Patient patient;
+    private Date startDateTime;
+    private Date endDateTime;
+}
diff --git a/api/src/main/resources/Bed.hbm.xml b/api/src/main/resources/Bed.hbm.xml
new file mode 100644
index 0000000..e3497df
--- /dev/null
+++ b/api/src/main/resources/Bed.hbm.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0"?>
+<!DOCTYPE hibernate-mapping PUBLIC
+        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
+        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
+<hibernate-mapping>
+
+    <class name="org.openmrs.module.emrapi.bedmanagement.domain.Bed" table="bed">
+
+        <id name="id" type="int" column="bed_id" unsaved-value="0" access="field">
+            <generator class="native"/>
+        </id>
+
+        <property name="number" type="java.lang.String" column="bed_number" length="10" unique="true" access="field"/>
+
+    </class>
+
+</hibernate-mapping>
+
diff --git a/api/src/main/resources/BedLocationMapping.hbm.xml b/api/src/main/resources/BedLocationMapping.hbm.xml
new file mode 100644
index 0000000..6fd9f57
--- /dev/null
+++ b/api/src/main/resources/BedLocationMapping.hbm.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0"?>
+<!DOCTYPE hibernate-mapping PUBLIC
+        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
+        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
+<hibernate-mapping>
+
+    <class name="org.openmrs.module.emrapi.bedmanagement.domain.BedLocationMapping" table="bed_location_mapping">
+
+        <id name="id" type="int" column="bed_location_mapping_id" unsaved-value="0" access="field">
+            <generator class="native"/>
+        </id>
+
+        <many-to-one name="location" class="org.openmrs.Location" not-null="true" column="location_id" access="field"/>
+        <many-to-one name="bed" class="org.openmrs.module.emrapi.bedmanagement.domain.Bed" not-null="false" column="bed_id" access="field"/>
+
+        <property name="row" type="java.lang.Integer" column="row_number" length="5" access="field"/>
+        <property name="column" type="java.lang.Integer" column="column_number" length="5" access="field"/>
+
+    </class>
+
+</hibernate-mapping>
+
diff --git a/api/src/main/resources/BedPatientAssignment.hbm.xml b/api/src/main/resources/BedPatientAssignment.hbm.xml
new file mode 100644
index 0000000..fd44902
--- /dev/null
+++ b/api/src/main/resources/BedPatientAssignment.hbm.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0"?>
+<!DOCTYPE hibernate-mapping PUBLIC
+        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
+        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
+<hibernate-mapping>
+
+    <class name="org.openmrs.module.emrapi.bedmanagement.domain.BedPatientAssignment" table="bed_patient_assignment">
+
+        <id name="id" type="int" column="bed_patient_assignment_id" unsaved-value="0" access="field">
+            <generator class="native"/>
+        </id>
+
+        <many-to-one name="patient" class="org.openmrs.Patient" not-null="true" column="patient_id" access="field"/>
+        <many-to-one name="bed" class="org.openmrs.module.emrapi.bedmanagement.domain.Bed" not-null="true" column="bed_id" access="field"/>
+
+        <property name="startDateTime" type="java.util.Date" column="date_started" length="19" access="field"/>
+        <property name="endDateTime" type="java.util.Date" column="date_stopped" length="19" access="field"/>
+
+    </class>
+
+</hibernate-mapping>
+
diff --git a/api/src/main/resources/liquibase.xml b/api/src/main/resources/liquibase.xml
new file mode 100644
index 0000000..09b387e
--- /dev/null
+++ b/api/src/main/resources/liquibase.xml
@@ -0,0 +1,66 @@
+<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
+
+    <changeSet author="emrapi" id="100">
+        <createTable tableName="bed">
+            <column autoIncrement="true" name="bed_id" type="int">
+                <constraints nullable="false" primaryKey="true"/>
+            </column>
+            <column name="bed_number" type="varchar(10)">
+                <constraints nullable="false"/>
+            </column>
+        </createTable>
+
+
+        <createTable tableName="bed_patient_assignment">
+            <column autoIncrement="true" name="bed_patient_assignment_id" type="int">
+                <constraints nullable="false" primaryKey="true"/>
+            </column>
+            <column name="patient_id" type="int">
+                <constraints nullable="false"/>
+            </column>
+            <column name="bed_id" type="int">
+                <constraints nullable="false"/>
+            </column>
+            <column name="date_started" type="datetime">
+                <constraints nullable="false"/>
+            </column>
+            <column name="date_stopped" type="datetime"/>
+        </createTable>
+        <addForeignKeyConstraint constraintName="bed_id_fk"
+                                 baseTableName="bed_patient_assignment" baseColumnNames="bed_id"
+                                 referencedTableName="bed" referencedColumnNames="bed_id"/>
+
+        <addForeignKeyConstraint constraintName="patient_fk"
+                                 baseTableName="bed_patient_assignment" baseColumnNames="patient_id"
+                                 referencedTableName="patient" referencedColumnNames="patient_id"/>
+
+
+        <createTable tableName="bed_location_mapping">
+            <column autoIncrement="true" name="bed_location_mapping_id" type="int">
+                <constraints nullable="false" primaryKey="true"/>
+            </column>
+            <column name="location_id" type="int">
+                <constraints nullable="false"/>
+            </column>
+            <column name="row_number" type="smallint">
+                <constraints nullable="false"/>
+            </column>
+            <column name="column_number" type="smallint">
+                <constraints nullable="false"/>
+            </column>
+            <column name="bed_id" type="int"/>
+        </createTable>
+
+        <addForeignKeyConstraint constraintName="location_id_fk"
+                                 baseTableName="bed_location_mapping" baseColumnNames="location_id"
+                                 referencedTableName="location" referencedColumnNames="location_id"/>
+
+        <!--<addForeignKeyConstraint constraintName="bed_id_fk"-->
+                                 <!--baseTableName="bed_location_mapping" baseColumnNames="bed_id"-->
+                                 <!--referencedTableName="bed" referencedColumnNames="bed_id"/>-->
+
+    </changeSet>
+</databaseChangeLog>
\ No newline at end of file
diff --git a/api/src/main/resources/moduleApplicationContext.xml b/api/src/main/resources/moduleApplicationContext.xml
index a3f3b69..5155650 100644
--- a/api/src/main/resources/moduleApplicationContext.xml
+++ b/api/src/main/resources/moduleApplicationContext.xml
@@ -154,7 +154,7 @@
             <ref bean="transactionAttributeSource"/>
         </property>
     </bean>
-    
+
      <bean id="emrPatientService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
         <property name="transactionManager">
             <ref bean="transactionManager"/>
@@ -218,16 +218,46 @@
             <list merge="true">
                 <value>${project.parent.groupId}.${project.parent.artifactId}.concept.EmrConceptService</value>
                 <ref local="emrConceptService"/>
-                <value>${project.parent.groupId}.${project.parent.artifactId}.patient.EmrPatientService</value>
-                <ref local="emrPatientService"/>
-                <value>${project.parent.groupId}.${project.parent.artifactId}.event.ApplicationEventService</value>
-                <ref local="applicationEventService"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean parent="serviceContext">
+        <property name="moduleService">
+            <list merge="true">
                 <value>${project.parent.groupId}.${project.parent.artifactId}.person.image.EmrPersonImageService</value>
                 <ref local="emrPersonImageService"/>
             </list>
         </property>
     </bean>
 
+    <bean parent="serviceContext">
+        <property name="moduleService">
+            <list merge="true">
+                <value>${project.parent.groupId}.${project.parent.artifactId}.event.ApplicationEventService</value>
+                <ref local="applicationEventService"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean parent="serviceContext">
+        <property name="moduleService">
+            <list merge="true">
+                <value>${project.parent.groupId}.${project.parent.artifactId}.patient.EmrPatientService</value>
+                <ref local="emrPatientService"/>
+            </list>
+        </property>
+    </bean>
+
+    <bean parent="serviceContext">
+        <property name="moduleService">
+            <list merge="true">
+                <value>${project.parent.groupId}.${project.parent.artifactId}.bedmanagement.BedManagementService</value>
+                <ref local="bedManagementService"/>
+            </list>
+        </property>
+    </bean>
+
 
     <bean id="emrEncounterDAO" class="${project.parent.groupId}.${project.parent.artifactId}.db.HibernateEmrEncounterDAO">
         <property name="sessionFactory">
@@ -235,7 +265,36 @@
         </property>
     </bean>
 
+    <bean id="bedManagementDao" class="${project.parent.groupId}.${project.parent.artifactId}.bedmanagement.HibernateBedManagementDAO">
+        <property name="sessionFactory">
+            <ref bean="sessionFactory"/>
+        </property>
+    </bean>
+
     <bean id="emrapiVisitDomainWrapperFactory" class="org.openmrs.module.emrapi.visit.VisitDomainWrapperFactory"/>
     <bean id="emrapiVisitDomainWrapperRepository" class="org.openmrs.module.emrapi.visit.VisitDomainWrapperRepository"/>
 
+    <bean id="bedManagementService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
+        <property name="transactionManager">
+            <ref bean="transactionManager"/>
+        </property>
+        <property name="target">
+            <bean class="org.openmrs.module.emrapi.bedmanagement.BedManagementServiceImpl">
+                <property name="bedManagementDao">
+                    <bean class="${project.parent.groupId}.${project.parent.artifactId}.bedmanagement.HibernateBedManagementDAO">
+                        <property name="sessionFactory">
+                            <ref bean="sessionFactory"/>
+                        </property>
+                    </bean>
+                </property>
+            </bean>
+        </property>
+        <property name="preInterceptors">
+            <ref bean="serviceInterceptors"/>
+        </property>
+        <property name="transactionAttributeSource">
+            <ref bean="transactionAttributeSource"/>
+        </property>
+    </bean>
+
 </beans>
diff --git a/api/src/test/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceTest.java b/api/src/test/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceTest.java
new file mode 100644
index 0000000..29b7158
--- /dev/null
+++ b/api/src/test/java/org/openmrs/module/emrapi/bedmanagement/BedManagementServiceTest.java
@@ -0,0 +1,28 @@
+package org.openmrs.module.emrapi.bedmanagement;
+
+import org.junit.Assert;
+import org.junit.Test;
+import org.openmrs.module.emrapi.EmrApiConstants;
+import org.openmrs.module.emrapi.bedmanagement.domain.AdmissionLocation;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.when;
+
+public class BedManagementServiceTest {
+    @Test
+    public void getAllAdmissionLocations_gets_locations_that_support_admission() {
+        ArrayList<AdmissionLocation> expectedWards = new ArrayList<AdmissionLocation>();
+
+        BedManagementDAO bedManagementDao = mock(BedManagementDAO.class);
+        when(bedManagementDao.getAllLocationsBy(EmrApiConstants.LOCATION_TAG_SUPPORTS_ADMISSION)).thenReturn(expectedWards);
+
+        BedManagementServiceImpl bedManagementService = new BedManagementServiceImpl();
+        bedManagementService.setBedManagementDao(bedManagementDao);
+
+        List<AdmissionLocation> wards = bedManagementService.getAllAdmissionLocations();
+        Assert.assertSame(expectedWards, wards);
+    }
+}
diff --git a/api/src/test/java/org/openmrs/module/emrapi/bedmanagement/db/BedManagementDaoComponentTest.java b/api/src/test/java/org/openmrs/module/emrapi/bedmanagement/db/BedManagementDaoComponentTest.java
new file mode 100644
index 0000000..581d946
--- /dev/null
+++ b/api/src/test/java/org/openmrs/module/emrapi/bedmanagement/db/BedManagementDaoComponentTest.java
@@ -0,0 +1,48 @@
+package org.openmrs.module.emrapi.bedmanagement.db;
+
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+import org.openmrs.module.emrapi.EmrApiConstants;
+import org.openmrs.module.emrapi.bedmanagement.BedManagementDAO;
+import org.openmrs.module.emrapi.bedmanagement.domain.AdmissionLocation;
+import org.openmrs.test.BaseModuleContextSensitiveTest;
+import org.springframework.beans.factory.annotation.Autowired;
+
+import java.util.List;
+
+import static org.hamcrest.CoreMatchers.is;
+import static org.junit.Assert.assertThat;
+
+public class BedManagementDaoComponentTest extends BaseModuleContextSensitiveTest {
+    @Autowired
+    private BedManagementDAO bedManagementDao;
+
+    @Before
+    public void beforeAllTests() throws Exception {
+        executeDataSet("bedManagementDAOComponentTestDataset.xml");
+    }
+
+    @Test
+    public void getAllLocationsBy_gets_locations_for_a_tag() {
+        List<AdmissionLocation> admissionLocationList = bedManagementDao.getAllLocationsBy(EmrApiConstants.LOCATION_TAG_SUPPORTS_ADMISSION);
+        assertThat(admissionLocationList.size(), is(3));
+
+        AdmissionLocation cardioWard = getWard(admissionLocationList, "Cardio ward on first floor");
+        Assert.assertEquals(10, cardioWard.getTotalBeds());
+        Assert.assertEquals(1, cardioWard.getOccupiedBeds());
+
+        AdmissionLocation orthoWard = getWard(admissionLocationList, "Orthopaedic ward");
+        Assert.assertEquals(4, orthoWard.getTotalBeds());
+        Assert.assertEquals(2, orthoWard.getOccupiedBeds());
+    }
+
+    private AdmissionLocation getWard(List<AdmissionLocation> admissionLocationList, String wardName) {
+        for (AdmissionLocation admissionLocation : admissionLocationList) {
+            if(admissionLocation.getName().equals(wardName))
+                return admissionLocation;
+        }
+        return null;
+    }
+
+}
diff --git a/api/src/test/resources/bedManagementDAOComponentTestDataset.xml b/api/src/test/resources/bedManagementDAOComponentTestDataset.xml
new file mode 100644
index 0000000..6955b44
--- /dev/null
+++ b/api/src/test/resources/bedManagementDAOComponentTestDataset.xml
@@ -0,0 +1,77 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<dataset>
+    <!-- this creates admission locations for testing bed management dao. We also add few non admission locations. -->
+    <location location_id="12345" name="Cardio ward on first floor" description="This ward houses cardio patients. It is a general cardio ward." creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="7779d653-393b-4118-9c83-a3715b82d4ac"/>
+    <location location_id="123451" name="Physical Location for Cardio ward on first floor" description="This ward houses cardio patients. It is a general cardio ward." creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="98bc9b32-9d1a-11e2-8137-0800271c1b75" parent_location="12345" />
+
+    <location_tag location_tag_id="12" name="Admission Location" creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="ad7311e1-1674-4740-8791-07563925336e" />
+
+    <location_tag_map location_id="12345" location_tag_id="12" />
+    <!--<location_tag_map location_id="123451" location_tag_id="12" />-->
+
+    <bed bed_id="1" bed_number="304-a" />
+    <bed bed_id="2" bed_number="304-b" />
+    <bed bed_id="3" bed_number="304-c" />
+    <bed bed_id="4" bed_number="304-d" />
+    <bed bed_id="5" bed_number="305-a" />
+    <bed bed_id="6" bed_number="305-b" />
+    <bed bed_id="7" bed_number="305-c" />
+    <bed bed_id="8" bed_number="305-d" />
+    <bed bed_id="9" bed_number="306-a" />
+    <bed bed_id="10" bed_number="306-b" />
+    <bed bed_id="11" bed_number="307-a" />
+    <bed bed_id="12" bed_number="307-b" />
+    <bed bed_id="13" bed_number="307-c" />
+    <bed bed_id="14" bed_number="307-d" />
+
+    <bed_location_mapping bed_location_mapping_id="1" location_id="123451" row_number="1" column_number="1" bed_id="1"/>
+    <bed_location_mapping bed_location_mapping_id="2" location_id="123451" row_number="1" column_number="2" bed_id="2"/>
+    <bed_location_mapping bed_location_mapping_id="3" location_id="123451" row_number="1" column_number="3" bed_id="3"/>
+    <bed_location_mapping bed_location_mapping_id="4" location_id="123451" row_number="1" column_number="4" bed_id="4"/>
+    <bed_location_mapping bed_location_mapping_id="5" location_id="123451" row_number="2" column_number="1" />
+    <bed_location_mapping bed_location_mapping_id="6" location_id="123451" row_number="2" column_number="2" />
+    <bed_location_mapping bed_location_mapping_id="7" location_id="123451" row_number="2" column_number="3" />
+    <bed_location_mapping bed_location_mapping_id="8" location_id="123451" row_number="2" column_number="4" />
+    <bed_location_mapping bed_location_mapping_id="9" location_id="123451" row_number="3" column_number="1" bed_id="5"/>
+    <bed_location_mapping bed_location_mapping_id="10" location_id="123451" row_number="3" column_number="2" bed_id="6"/>
+    <bed_location_mapping bed_location_mapping_id="11" location_id="123451" row_number="3" column_number="3" bed_id="7"/>
+    <bed_location_mapping bed_location_mapping_id="12" location_id="123451" row_number="3" column_number="4" bed_id="8"/>
+    <bed_location_mapping bed_location_mapping_id="13" location_id="123451" row_number="1" column_number="5" />
+    <bed_location_mapping bed_location_mapping_id="14" location_id="123451" row_number="1" column_number="6" bed_id="9"/>
+    <bed_location_mapping bed_location_mapping_id="15" location_id="123451" row_number="2" column_number="5" />
+    <bed_location_mapping bed_location_mapping_id="16" location_id="123451" row_number="2" column_number="6" />
+    <bed_location_mapping bed_location_mapping_id="17" location_id="123451" row_number="3" column_number="5" />
+    <bed_location_mapping bed_location_mapping_id="18" location_id="123451" row_number="3" column_number="6" bed_id="10"/>
+
+    <bed_location_mapping bed_location_mapping_id="19" location_id="123452" row_number="1" column_number="1" bed_id="11"/>
+    <bed_location_mapping bed_location_mapping_id="20" location_id="123452" row_number="1" column_number="2" bed_id="12"/>
+    <bed_location_mapping bed_location_mapping_id="21" location_id="123452" row_number="1" column_number="3" bed_id="13"/>
+    <bed_location_mapping bed_location_mapping_id="22" location_id="123452" row_number="1" column_number="4" bed_id="14"/>
+    <bed_location_mapping bed_location_mapping_id="23" location_id="123452" row_number="2" column_number="1" />
+    <bed_location_mapping bed_location_mapping_id="24" location_id="123452" row_number="2" column_number="2" />
+
+
+    <patient patient_id="2" creator="1" date_created="2005-01-01 00:00:00.0" voided="false"/>
+
+    <bed_patient_assignment bed_patient_assignment_id="1" patient_id="2" bed_id="1"/>
+
+    <patient patient_id="3" creator="1" date_created="2005-01-01 00:00:00.0" voided="false"/>
+    <patient patient_id="4" creator="1" date_created="2005-01-01 00:00:00.0" voided="false"/>
+    <bed_patient_assignment bed_patient_assignment_id="2" patient_id="3" bed_id="11"/>
+    <bed_patient_assignment bed_patient_assignment_id="3" patient_id="4" bed_id="12"/>
+
+    <location location_id="12346" name="Cardio ward on third floor" description="This ward houses cardio patients. It is a special cardio ward." creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="e26cea2c-1b9f-666e-6511-f3ef6c88af6f"/>
+    <location location_id="12347" name="Orthopaedic ward" description="This ward houses orthopaedic patients." creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="19e023e8-20ee-4237-ade6-9e68f897b7a9"/>
+    <location location_id="123452" name="Physical Location for Orthopaedic ward" description="This ward houses Orthopaedic ward." creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="98bc9b32-9d1a-11e2-8137-0800271c1b56" parent_location="12347" />
+    <location location_id="12348" name="Ganiyari" description="This is a small village in central India." creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="285e8574-9d21-11e2-8137-0800271c1b75"/>
+
+    <location_tag location_tag_id="13" name="Visit Location" creator="1" date_created="2008-08-18 14:09:05.0" retired="0" uuid="6f7e82dd-246d-46af-aaf1-04b00cac498b" />
+
+    <location_tag_map location_id="12348" location_tag_id="13" />
+    <location_tag_map location_id="12346" location_tag_id="12" />
+    <location_tag_map location_id="12347" location_tag_id="12" />
+
+</dataset>
+
+
+
diff --git a/api/src/test/resources/test-hibernate.cfg.xml b/api/src/test/resources/test-hibernate.cfg.xml
index 564e9d5..b6a58be 100644
--- a/api/src/test/resources/test-hibernate.cfg.xml
+++ b/api/src/test/resources/test-hibernate.cfg.xml
@@ -11,5 +11,8 @@
         <mapping resource="ExportedPackage.hbm.xml" />
         <mapping resource="ImportedPackage.hbm.xml" />
         <mapping resource="ImportedItem.hbm.xml" />
+        <mapping resource="Bed.hbm.xml"/>
+        <mapping resource="BedLocationMapping.hbm.xml"/>
+        <mapping resource="BedPatientAssignment.hbm.xml"/>
     </session-factory>
 </hibernate-configuration>
diff --git a/omod/src/main/java/org/openmrs/module/emrapi/web/controller/AdmissionLocationResource.java b/omod/src/main/java/org/openmrs/module/emrapi/web/controller/AdmissionLocationResource.java
new file mode 100644
index 0000000..e16197e
--- /dev/null
+++ b/omod/src/main/java/org/openmrs/module/emrapi/web/controller/AdmissionLocationResource.java
@@ -0,0 +1,80 @@
+package org.openmrs.module.emrapi.web.controller;
+
+import org.openmrs.api.context.Context;
+import org.openmrs.module.emrapi.bedmanagement.BedManagementService;
+import org.openmrs.module.emrapi.bedmanagement.domain.AdmissionLocation;
+import org.openmrs.module.webservices.rest.web.RequestContext;
+import org.openmrs.module.webservices.rest.web.RestConstants;
+import org.openmrs.module.webservices.rest.web.annotation.Resource;
+import org.openmrs.module.webservices.rest.web.representation.Representation;
+import org.openmrs.module.webservices.rest.web.resource.api.PageableResult;
+import org.openmrs.module.webservices.rest.web.resource.impl.AlreadyPaged;
+import org.openmrs.module.webservices.rest.web.resource.impl.DelegatingCrudResource;
+import org.openmrs.module.webservices.rest.web.resource.impl.DelegatingResourceDescription;
+import org.openmrs.module.webservices.rest.web.response.ResourceDoesNotSupportOperationException;
+import org.openmrs.module.webservices.rest.web.response.ResponseException;
+
+import java.util.Arrays;
+import java.util.List;
+
+//@Controller
+//@RequestMapping(value = "/rest/emrapi/admissionLocations")
+//public class AdmissionLocationController extends BaseRestController {
+@Resource(name = RestConstants.VERSION_1 + "/admissionLocation", supportedClass = AdmissionLocation.class, supportedOpenmrsVersions = "1.9.*")
+public class AdmissionLocationResource extends DelegatingCrudResource<AdmissionLocation> {
+
+
+    @Override
+    protected PageableResult doGetAll(RequestContext context) throws ResponseException {
+        BedManagementService bedManagementService = (BedManagementService) Context.getModuleOpenmrsServices(BedManagementService.class.getName()).get(0);
+        List<AdmissionLocation> admissionLocations = bedManagementService.getAllAdmissionLocations();
+        return new AlreadyPaged<AdmissionLocation>(context, admissionLocations, false);
+    }
+
+    @Override
+    public List<Representation> getAvailableRepresentations() {
+        return Arrays.asList(Representation.DEFAULT, Representation.FULL);
+    }
+
+    @Override
+    public DelegatingResourceDescription getRepresentationDescription(Representation rep) {
+        return new DelegatingResourceDescription();
+    }
+
+    @Override
+    public AdmissionLocation getByUniqueId(String s) {
+        throw new ResourceDoesNotSupportOperationException("search of admission location not supported");
+    }
+
+    @Override
+    protected void delete(AdmissionLocation admissionLocation, String s, RequestContext requestContext) throws ResponseException {
+        throw new ResourceDoesNotSupportOperationException("delete of admission location not supported");
+    }
+
+    @Override
+    public void purge(AdmissionLocation admissionLocation, RequestContext requestContext) throws ResponseException {
+        throw new ResourceDoesNotSupportOperationException("purge of admission location not supported");
+    }
+
+    @Override
+    public DelegatingResourceDescription getCreatableProperties() throws ResourceDoesNotSupportOperationException {
+        throw new ResourceDoesNotSupportOperationException("create of admission location not supported");
+    }
+
+    @Override
+    public AdmissionLocation newDelegate() {
+        return new AdmissionLocation();
+    }
+
+    @Override
+    public AdmissionLocation save(AdmissionLocation admissionLocation) {
+        throw new ResourceDoesNotSupportOperationException("save of admission location not supported");
+    }
+//
+//    @RequestMapping(method = RequestMethod.GET)
+//    @ResponseBody
+//    public List<AdmissionLocation> getAdmissionLocations() {
+//        return bedManagementService.getAllAdmissionLocations();
+//    }
+
+}
diff --git a/omod/src/main/resources/config.xml b/omod/src/main/resources/config.xml
index f04f267..f85979f 100644
--- a/omod/src/main/resources/config.xml
+++ b/omod/src/main/resources/config.xml
@@ -33,7 +33,7 @@
 
     <!-- Maps hibernate files, if present -->
     <mappingFiles>
-        Printer.hbm.xml
+        Printer.hbm.xml Bed.hbm.xml BedLocationMapping.hbm.xml BedPatientAssignment.hbm.xml
     </mappingFiles>
 
     <!-- Internationalization -->
-- 
1.7.12.4 (Apple Git-37)

